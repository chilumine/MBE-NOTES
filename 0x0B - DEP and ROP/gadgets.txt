0x080487cf: adc al, 0x41; ret; 
0x08048430: add al, 0x24; sub al, 0xa0; add al, 8; call eax; 
0x08048430: add al, 0x24; sub al, 0xa0; add al, 8; call eax; leave; ret; 
0x0804846d: add al, 0x24; sub al, 0xa0; add al, 8; call edx; 
0x0804846d: add al, 0x24; sub al, 0xa0; add al, 8; call edx; leave; ret; 
0x0804846b: add al, 0xc7; add al, 0x24; sub al, 0xa0; add al, 8; call edx; 
0x08048434: add al, 8; call eax; 
0x08048434: add al, 8; call eax; leave; ret; 
0x08048471: add al, 8; call edx; 
0x08048471: add al, 8; call edx; leave; ret; 
0x08048418: add al, 8; cmp eax, 6; ja 0x420; ret; 
0x08048413: add al, 8; sub eax, 0x804a02c; cmp eax, 6; ja 0x420; ret; 
0x080487a7: add byte ptr [eax + eax], ch; add byte ptr [esi + edi*8 - 1], dl; jmp dword ptr [ecx]; 
0x080487a5: add byte ptr [eax], al; add byte ptr [eax + eax], ch; add byte ptr [esi + edi*8 - 1], dl; jmp dword ptr [ecx]; 
0x080485f3: add byte ptr [eax], al; add byte ptr [ebp + 0x5f5bf865], cl; pop ebp; ret; 
0x080487a9: add byte ptr [eax], al; add byte ptr [esi + edi*8 - 1], dl; jmp dword ptr [ecx]; 
0x08048354: add byte ptr [eax], al; add esp, 8; pop ebx; ret; 
0x080487a6: add byte ptr [eax], al; insb byte ptr es:[edi], dx; add byte ptr [eax], al; add byte ptr [esi + edi*8 - 1], dl; jmp dword ptr [ecx]; 
0x080485f4: add byte ptr [eax], al; lea esp, [ebp - 8]; pop ebx; pop edi; pop ebp; ret; 
0x080487a3: add byte ptr [eax], bh; add byte ptr [eax], al; add byte ptr [eax + eax], ch; add byte ptr [esi + edi*8 - 1], dl; jmp dword ptr [ecx]; 
0x080485f5: add byte ptr [ebp + 0x5f5bf865], cl; pop ebp; ret; 
0x08048337: add byte ptr [ebx - 0x7d], dl; in al, dx; or al, ch; mov edi, 0x81000000; ret; 
0x080487ab: add byte ptr [esi + edi*8 - 1], dl; jmp dword ptr [ecx]; 
0x080487cc: add cl, byte ptr [eax + 0xe]; adc al, 0x41; ret; 
0x0804844c: add cl, byte ptr [ecx + 0x1feac1c2]; add eax, edx; sar eax, 1; jne 0x459; ret; 
0x08048793: add eax, dword ptr [ebx + 0x11f0304]; ret; 
0x08048452: add eax, edx; sar eax, 1; jne 0x459; ret; 
0x08048659: add esp, 0x1c; pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08048356: add esp, 8; pop ebx; ret; 
0x080484ba: and al, 0x10; lahf; add al, 8; call eax; 
0x08048431: and al, 0x2c; mov al, byte ptr [0xd0ff0804]; leave; ret; 
0x0804846e: and al, 0x2c; mov al, byte ptr [0xd2ff0804]; leave; ret; 
0x08048542: and al, 0xe8; push 0x89fffffe; ret; 
0x0804846a: and al, 4; mov dword ptr [esp], 0x804a02c; call edx; 
0x08048351: call 0x3a0; add esp, 8; pop ebx; ret; 
0x080484c6: call dword ptr [eax - 0x8c17]; call dword ptr [ebp - 0x77]; 
0x080484cc: call dword ptr [ebp - 0x77]; 
0x08048603: call dword ptr [esi + 0x53]; 
0x08048436: call eax; 
0x08048436: call eax; leave; ret; 
0x08048473: call edx; 
0x08048473: call edx; leave; ret; 
0x080487a4: cmp byte ptr [eax], al; add byte ptr [eax], al; insb byte ptr es:[edi], dx; add byte ptr [eax], al; add byte ptr [esi + edi*8 - 1], dl; jmp dword ptr [ecx]; 
0x0804841a: cmp eax, 6; ja 0x420; ret; 
0x080487cd: dec eax; push cs; adc al, 0x41; ret; 
0x08048658: fild word ptr [ebx + 0x5e5b1cc4]; pop edi; pop ebp; ret; 
0x0804833a: in al, dx; or al, ch; mov edi, 0x81000000; ret; 
0x0804842d: in al, dx; sbb bh, al; add al, 0x24; sub al, 0xa0; add al, 8; call eax; 
0x08048466: in al, dx; sbb byte ptr [ecx - 0x38fbdbbc], cl; add al, 0x24; sub al, 0xa0; add al, 8; call edx; 
0x080487d0: inc ecx; ret; 
0x08048469: inc esp; and al, 4; mov dword ptr [esp], 0x804a02c; call edx; 
0x080487a8: insb byte ptr es:[edi], dx; add byte ptr [eax], al; add byte ptr [esi + edi*8 - 1], dl; jmp dword ptr [ecx]; 
0x0804841d: ja 0x420; ret; 
0x0804834f: je 0x356; call 0x3a0; add esp, 8; pop ebx; ret; 
0x080484b0: je 0x4c8; push ebp; mov ebp, esp; sub esp, 0x18; mov dword ptr [esp], 0x8049f10; call eax; 
0x080487af: jmp dword ptr [ecx]; 
0x08048456: jne 0x459; ret; 
0x080485f6: lea esp, [ebp - 8]; pop ebx; pop edi; pop ebp; ret; 
0x0804865a: les ebx, ptr [ebx + ebx*2]; pop esi; pop edi; pop ebp; ret; 
0x08048357: les ecx, ptr [eax]; pop ebx; ret; 
0x08048412: mov al, byte ptr [0x2c2d0804]; mov al, byte ptr [0xf8830804]; push es; ja 0x420; ret; 
0x08048433: mov al, byte ptr [0xd0ff0804]; leave; ret; 
0x08048470: mov al, byte ptr [0xd2ff0804]; leave; ret; 
0x08048417: mov al, byte ptr [0xf8830804]; push es; ja 0x420; ret; 
0x08048468: mov dword ptr [esp + 4], eax; mov dword ptr [esp], 0x804a02c; call edx; 
0x080484b8: mov dword ptr [esp], 0x8049f10; call eax; 
0x0804842f: mov dword ptr [esp], 0x804a02c; call eax; 
0x0804842f: mov dword ptr [esp], 0x804a02c; call eax; leave; ret; 
0x0804846c: mov dword ptr [esp], 0x804a02c; call edx; 
0x0804846c: mov dword ptr [esp], 0x804a02c; call edx; leave; ret; 
0x08048410: mov eax, 0x804a02f; sub eax, 0x804a02c; cmp eax, 6; ja 0x420; ret; 
0x080484b3: mov ebp, esp; sub esp, 0x18; mov dword ptr [esp], 0x8049f10; call eax; 
0x08048400: mov ebx, dword ptr [esp]; ret; 
0x0804833d: mov edi, 0x81000000; ret; 
0x0804844d: mov edx, eax; shr edx, 0x1f; add eax, edx; sar eax, 1; jne 0x459; ret; 
0x0804833b: or al, ch; mov edi, 0x81000000; ret; 
0x08048435: or bh, bh; ror cl, 1; ret; 
0x08048472: or bh, bh; ror cl, cl; ret; 
0x08048414: or byte ptr [0x804a02c], ch; cmp eax, 6; ja 0x420; ret; 
0x08048419: or byte ptr [ebx + 0x17706f8], al; ret; 
0x08048451: pop ds; add eax, edx; sar eax, 1; jne 0x459; ret; 
0x080485fb: pop ebp; ret; 
0x080485f9: pop ebx; pop edi; pop ebp; ret; 
0x0804865c: pop ebx; pop esi; pop edi; pop ebp; ret; 
0x08048359: pop ebx; ret; 
0x080485fa: pop edi; pop ebp; ret; 
0x0804865d: pop esi; pop edi; pop ebp; ret; 
0x08048544: push 0x89fffffe; ret; 
0x080487ce: push cs; adc al, 0x41; ret; 
0x080487ca: push cs; xor byte ptr [edx], al; dec eax; push cs; adc al, 0x41; ret; 
0x080484b2: push ebp; mov ebp, esp; sub esp, 0x18; mov dword ptr [esp], 0x8049f10; call eax; 
0x0804841c: push es; ja 0x420; ret; 
0x080484b1: push ss; push ebp; mov ebp, esp; sub esp, 0x18; mov dword ptr [esp], 0x8049f10; call eax; 
0x08048453: rcl cl, 1; clc; jne 0x459; ret; 
0x0804844e: ret 0xeac1; 
0x08048437: ror cl, 1; ret; 
0x08048474: ror cl, cl; ret; 
0x08048454: sar eax, 1; jne 0x459; ret; 
0x08048401: sbb al, 0x24; ret; 
0x0804865b: sbb al, 0x5b; pop esi; pop edi; pop ebp; ret; 
0x0804842e: sbb bh, al; add al, 0x24; sub al, 0xa0; add al, 8; call eax; 
0x08048467: sbb byte ptr [ecx - 0x38fbdbbc], cl; add al, 0x24; sub al, 0xa0; add al, 8; call edx; 
0x0804844f: shr edx, 0x1f; add eax, edx; sar eax, 1; jne 0x459; ret; 
0x08048432: sub al, 0xa0; add al, 8; call eax; 
0x08048432: sub al, 0xa0; add al, 8; call eax; leave; ret; 
0x0804846f: sub al, 0xa0; add al, 8; call edx; 
0x0804846f: sub al, 0xa0; add al, 8; call edx; leave; ret; 
0x08048416: sub al, 0xa0; add al, 8; cmp eax, 6; ja 0x420; ret; 
0x08048415: sub eax, 0x804a02c; cmp eax, 6; ja 0x420; ret; 
0x08048465: sub esp, 0x18; mov dword ptr [esp + 4], eax; mov dword ptr [esp], 0x804a02c; call edx; 
0x080484b5: sub esp, 0x18; mov dword ptr [esp], 0x8049f10; call eax; 
0x0804842c: sub esp, 0x18; mov dword ptr [esp], 0x804a02c; call eax; 
0x0804834d: test eax, eax; je 0x356; call 0x3a0; add esp, 8; pop ebx; ret; 
0x080487cb: xor byte ptr [edx], al; dec eax; push cs; adc al, 0x41; ret; 
0x0804844b: clc; add cl, byte ptr [ecx + 0x1feac1c2]; add eax, edx; sar eax, 1; jne 0x459; ret; 
0x08048455: clc; jne 0x459; ret; 
0x080485f8: clc; pop ebx; pop edi; pop ebp; ret; 
0x0804841b: clc; push es; ja 0x420; ret; 
0x08048411: das; mov al, byte ptr [0x2c2d0804]; mov al, byte ptr [0xf8830804]; push es; ja 0x420; ret; 
0x080484bc: lahf; add al, 8; call eax; 
0x08048438: leave; ret; 
0x0804840f: nop; mov eax, 0x804a02f; sub eax, 0x804a02c; cmp eax, 6; ja 0x420; ret; 
0x080483ff: nop; mov ebx, dword ptr [esp]; ret; 
0x080483fd: nop; nop; mov ebx, dword ptr [esp]; ret; 
0x080483fb: nop; nop; nop; mov ebx, dword ptr [esp]; ret; 
0x080483f9: nop; nop; nop; nop; mov ebx, dword ptr [esp]; ret; 
0x08048342: ret; 

